숙제2) "메모장"에서 다음과 같은 기능을 구현 해 봅니다.
	 	1) "저장하지"않고 "새파일" 이나, "열기"를 누르면
	 			"저장하시겠습니까?"라고 물어보고
	 			저장하도록 처리 해 봅니다.
	 	2) 만약에 파일을 불어온 상태이거나 이미 저장되어 있는 상태에서
	 		내용을 변경한다음 "저장"을 누르면
	 		이름을 묻지않고 그 이름으로 저장하도록 구현합니다.
		
		
** 맴버변수를 하나 추가해야 겠습니다.
==> 파일을 저장한 이후에 혹은 파일을 열어온 이후에 
		변경된 내용이 있는지 없는지 판별할 변수
		한 글자라도 변경이 되는 순간 true를 저장하고 
		저장한 순간 열어온 순간 변경된 내용이 없으니 false를 저장하도록 합시다.
		
		그래서, "새파일"을 누르면
		저 변수가 true인지 판별하여 
		"저장하시겠습니까?"라고 물어보도록 합시다.
	
===> isNew에 언제 true가 들어갑니까?
		텍스트에리어에 글씨가 써질때
		텍스트에리어에 글씨가 써지는 이벤트(KeyListener)를 등록해야 합니다.
		
		
---------------------------------------------------------------
파일을 열어온 상태에서 
	열어왔으면 이미 파일이름이 있어요.
	
	그래서 다른내용을 추가한 다음
	저장할때에
	이름을 묻지않고 
	그 이름으로 저장하도록 하고 싶어요!
	
	그럴려면
	열어왔을때의 File객체를 
	맴버변수에 File에 넣어야 해요.
	
-----------------------------------------------------------------------------------------
** 네트워크프로그래밍
==> 네트워크상의 두대이상의 컴퓨터끼리 
		서로 데이터를 주고 받는 프로그래밍
	
==> 자바에서는 네트워크프로그램을 위하여 
		java.net 패키지에 관련 클래스와 인터페이스들을 모아 두었습니다.
		
** 네트워크 기본 용어

- ip address
	==> 네트워크상의 특정 컴퓨터를 구별하기 위한 식별자를 말합니다.
	==> 네트워크 통신을 하려면 통신할 대상 컴퓨터를 정해야 하는데
			ip address를 갖고 정할 수 있어요.
			

- port번호
	==> 하나의 컴퓨터에서 동시에 여러개의 네트워크 프로그램이 실행될 수 있어요
			이때 특정 프로그램을 식별하기 위한 역할을 port 번호로 구별합니다.
			
		그러니까 하나의 컴퓨터를 구별하기 위한 식별자는 ipAddres이고 
		그 컴퓨터에서 동시에 실행되는 프로그램을 식별하는 것으 port번호입니다.
		
		줌도 실행시켜놓고 카카오톡도 실행시켜놓았어요.
		카카오톡에 작성한 메세지가 줌으로 가면 이상하잖아요.
		그러니 특정 네트프로그램을 식별하기 위한 식별자 역할 이 필요해요.
		
		우리가 만드는 네크워크 프로그램에서
		포트번호를 정해놓고 
		그 포트번호로 접속하도록 해야 합니다.
		
- TCP 방식
	==> 현실세계의 전화와 같은 개념으로 
			통신을 할 컴퓨터와 연결을 먼저 맺어 놓고 
			그 연결된 회선을 통해 메세지를 주고받는 방식
			- 신뢰성이 높다.	    (장점)
			- 네트워크의 부담이 높다. (단점)
	
	자바에서는 
	Socket클래스와 ServerSocket을 이용하여 
	TCP방식의 네트워크 프로그램을 구현할 수 있어요.
	
	
- UDP 방식	
	==> 현실세계의 편지와 같은 개념으로
			통신을 할 컴퓨터와 연결을 맺지 않고 
			데이터를 무조건 보내는 방식	
			- 신뢰성이 낮다 		(단점)
			- 네트워크의 부담이 적다  (장점)

	자바에서는 
	DatagramPacket과 DatagramSocket을 이용하여
	UDP방식의 네트워크 프로그램을 구현할 수 있어요.
	
	연결을 먼저 맺어 놓은게 아니기 때문에 
	데이터를 보낼때 마다 
	목적지와 주소와 데이터가 합쳐진
	패킷단위를 전송해야 합니다.

-------------------------------------------------------------------------------------

InetAddress
	==> 인터넷상의 컴퓨터이름 및 ip주소의 정보를 위한 클래스 입니다.
	==> 이것을 생성자가 없고 다음의 static메소드를 통해 객체를 생성할 수 있습니다.
	

static InetAddress	getByName(String host)
Determines the IP address of a host, given the host's name.

-------------------------------------------------------------------------------
"https://www.naver.com/"

www.naver.com/223.130.195.200

ip주소를 사람들이 기억하기는 어려워요
그 ip주소에 매칭되는 문자로 되어있는 것을 대신 사용해요.
==> "도메인네임"이라고 합니다.

규모가 큰 서비스인 경우
	위험에 대비하기 위하여 세컨드리 서버를 둘 수있어요
	
	getAllByName(String host) 이 메소드를 이용하면
	그 컴퓨터이름에 해당하는 모든 InetAddress객체를 읽어 올 수 있어요.

---------------------------------------------------------------

URL : Uniform Resource Locator
		인터넷상의 문서의 위치를 갖고 있는 객체입니다.
		
	이것을 이용하면 스트림을 통해
	인터넷상의 문서의 내용을 수집할 수 있어요!
	
	네트워클 통해 데이터를 수신할 때에는 
	byte의 일정한 양의 배열로 수신합니다.
	
	이것을 다시 문자열로 만들기 위해서는 
	String(byte[]data) 의 생성자를 이용합니다.
	
	그러한 한글인 경우는 모두 한글이 깨져서 표현이 됩니다.
	
	한글처리를 위해서는 다음의 생성자를 이용합니다.
	String(byte[] bytes, String charsetName)
	
	이때 한글을 위한 문자셋의 종류로는 
	
	euc-kr
	utf-8이 있습니다.
	
	요즘은 utf-8을 더 많이 사용합니다.
	







---------------------------------------------------------------------

Server	
		네트워크상에서 서비스를 제공하는 컴퓨터 혹은 프로그램을 말합니다.
		
		
Client
		네트워크상에서 서비스를 제공받는 컴퓨터 혹은 프로그램을 말합니다.
		
---------------------------------------------------------------------

TCP 방식의 네트워크 프로그래밍 절차

<< 서버측 >>
1) ServerSocket을 통하여 서버를 가동합니다.
		ServerSocket(int port)
		이때 클라이언트 약속된 포트번호를 정해야 합니다.
		
	계속하여 클라이언트가 접속할 때까지 무한 대기상태에 있어야 합니다.	
	
3) 클라이언트의 요청을 수락합니다.
		Socket	accept()
		이때 반환되는 Socket를 통하여 
		클라이언트와 데이터를 주고 받을 수있어요.(데이터소켓)

4) Socket을 통하여 데이터를 주고받을 스트림을 생성합니다.
		InputStream		getInputStream()
		OutputStream	getOutputStream()


5) 데이터를 주고 받는다.

6) 사용했던 스트림을 닫아줍니다.

<< 클라이언트측 >>
2) Socket을 통하여 서버에 통신을 요청합니다.
	Socket(String host, int port)
	host는 서버의 ip주소 이며
	port는 서버에서 정한 port번호 이어야 합니다.
	
			
4) Socket을 통하여 데이터를 주고받을 스트림을 생성합니다.
		InputStream		getInputStream()
		OutputStream	getOutputStream()		
		

5) 데이터를 주고 받는다.		
		
6) 사용했던 스트림을 닫아줍니다.		
		
-----------------------------------------------------------

ip주소 확인하는 명령
c:/>ipconfig

내 컴퓨터의 ip주소 대신에 
	127.0.0.1
	localhost
	
	를 사용할 수 있습니다.	
		
-----------------------------------------------------------

숙제1) 오늘 학습한 내용을 요약하고 정리합니다.
숙제2) com.sist.echo를 복사하여 
		TCPChatServer를 
		한번에 여러명의 클라이언트로 부터 
		동시에 메세지를 받아
		"메아리"하도록 구현 해 봅니다.
		(아직 "방송"하는 것은 아니고 받은 메세지를 클라이언트 한명하게만 메아리 하되
			한번에 여러명을 상대하도록 하는 것입니다.)
		** Thread클래스나 Runnable 인터페이스를 이용합니다.2
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
			
	
	
	
	
		